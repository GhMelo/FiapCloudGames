// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250515210830_primeira-migracao")]
    partial class primeiramigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Produtora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Produtora");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Titulo");

                    b.Property<int>("UsuarioCadastroId")
                        .HasColumnType("INT")
                        .HasColumnName("UsuarioCadastroId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCadastroId");

                    b.ToTable("Jogo", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataCriacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Core.Entity.UsuarioJogoAdquirido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataCriacao");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT")
                        .HasColumnName("JogoId");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT")
                        .HasColumnName("UsuarioCadastroId");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioJogoAdquirido", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.HasOne("Core.Entity.Usuario", "UsuarioCadastro")
                        .WithMany("JogosCadastrados")
                        .HasForeignKey("UsuarioCadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioCadastro");
                });

            modelBuilder.Entity("Core.Entity.UsuarioJogoAdquirido", b =>
                {
                    b.HasOne("Core.Entity.Jogo", "Jogo")
                        .WithMany("UsuariosQueAdquiriram")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("JogosAdquiridos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Navigation("UsuariosQueAdquiriram");
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Navigation("JogosAdquiridos");

                    b.Navigation("JogosCadastrados");
                });
#pragma warning restore 612, 618
        }
    }
}
